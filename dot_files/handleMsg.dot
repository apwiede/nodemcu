digraph G1 {
  compmsg_uartReceiveCb[style="filled", color="green"];
  compmsg_uartReceiveCb -> Uart;
  Mcu[style="filled", color="green"];
  Mcu -> compmsg_uartReceiveCb;
  Queue [style="filled", color="orange", shape=record, label="<f0> 0|<f1> 1|<f2> 2|<f3> 3|<f4> 4"];
  Uart -> Queue:f0;
  Queue:f0 -> Uart;
  Uart -> Mcu;
  Uart[style="filled", color="green"];
  WebSocket[style="filled", color="green"];
  App[style="filled", color="orange"];
  App -> WebSocket;
  WebSocket -> Queue:f1;
  WebSocket -> Queue:f2;
  WebSocket -> Queue:f3;
  WebSocket -> Queue:f4;
  Queue:f1 -> WebSocket;
  Queue:f2 -> WebSocket;
  Queue:f3 -> WebSocket;
  Queue:f4 -> WebSocket;
  Cloud[style="filled", color="orange"];
  Cloud -> HttpSocket;
  HttpSocket[style="filled", color="green"];
  HttpSocket -> Queue:f1;
  HttpSocket -> Queue:f2;
  HttpSocket -> Queue:f3;
  HttpSocket -> Queue:f4;
  {rank=same; "compmsg_uartReceiveCb"; "Mcu"; "App"; "Cloud";}
  {rank=same; "Uart"; "WebSocket"; "HttpSocket";}
  Queue:f1 -> HttpSocket;
  Queue:f2 -> HttpSocket;
  Queue:f3 -> HttpSocket;
  Queue:f4 -> HttpSocket;
  Queue:f0 -> handleReceivedPart;
  Queue:f1 -> handleReceivedPart;
  Queue:f2 -> handleReceivedPart;
  Queue:f3 -> handleReceivedPart;
  Queue:f4 -> handleReceivedPart;
  handleReceivedPart[style="filled", color="green", label=<<u>handleReceivedPart</u>> URL="\ref handleReceivedPart"];
  prepareAnswerMsg[style="filled", color="green", label=<<u>prepareAnswerMsg</u>> URL="\ref prepareAnswerMsg"];
  handleReceivedPart -> prepareAnswerMsg;
  sendMsg [style="filled", color="green", shape=record, label="<f0> N|<f1> G|<f2> S|<f3> R|<f4> U|<f5> W|<f6> A"];
  prepareAnswerMsg -> sendMsg:f1;
  sendMsg:f1 -> sendMsg:f6;
  prepareAnswerMsg -> sendMsg:f5;
  prepareAnswerMsg -> sendMsg:f3;
  prepareAnswerMsg -> sendMsg:f4;
  sendMsg:f3 -> sendMsg:f2;
  sendMsg:f6 -> webSocketSendData;
  sendMsg:f4 -> httpSocketSendData;
  httpSocketSendData[style="filled", color="green"];
  webSocketSendData[style="filled", color="green"];
  webSocketSendData -> Queue:f1;
  webSocketSendData -> Queue:f2;
  webSocketSendData -> Queue:f3;
  webSocketSendData -> Queue:f4;
  httpSocketSendData -> Queue:f1;
  httpSocketSendData -> Queue:f2;
  httpSocketSendData -> Queue:f3;
  httpSocketSendData -> Queue:f4;
  {rank=same; "typeRSendAnswer"; "typeWSendAnswer"; "webSocketSendData"; "httpSocketSendData";}
  sendMsg:f5 -> typeWSendAnswer;
  sendMsg:f2 -> typeRSendAnswer;
  typeRSendAnswer[style="filled", color="green"];
  typeWSendAnswer[style="filled", color="red"];
  typeRSendAnswer -> Queue:f0;
  typeWSendAnswer -> Queue:f0;
  typeRSendAnswer -> deleteMsg;
  typeWSendAnswer -> deleteMsg;
  deleteMsg[style="filled", color="green"];
  httpSocketSendData -> deleteMsg;
  webSocketSendData -> deleteMsg;
}
