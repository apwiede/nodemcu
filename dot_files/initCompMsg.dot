digraph G {
  WifiModuleStart -> compmsg_createDispatcher;
  compmsg_createDispatcher -> compmsg_initDispatcher;
  compmsg_initDispatcher -> uart_setup;
  uart_setup -> uart_on;
  uart_on -> compmsg_uartReceiveCb;
  compmsg_uartReceiveCb -> Uart;
  Mcu -> compmsg_uartReceiveCb;
  node [shape=record];
    Queue [shape=record, label="<f0> 0|<f1> 1|<f2> 2|<f3> 3|<f4> 4"];
  Uart -> Queue:f0;
  Queue:f0 -> Uart;
  Uart -> Mcu;
  App -> WebSocket;
  WebSocket -> Queue:f1;
  WebSocket -> Queue:f2;
  WebSocket -> Queue:f3;
  WebSocket -> Queue:f4;
  Cloud -> HttpSocket;
  HttpSocket -> Queue:f1;
  HttpSocket -> Queue:f2;
  HttpSocket -> Queue:f3;
  HttpSocket -> Queue:f4;
  Queue:f0 -> handleReceivedPart;
  Queue:f1 -> handleReceivedPart;
  Queue:f2 -> handleReceivedPart;
  Queue:f3 -> handleReceivedPart;
  Queue:f4 -> handleReceivedPart;
  handleReceivedPart -> getHeaderIndexFromHeaderFields;
  getHeaderIndexFromHeaderFields -> totalLgth;
  totalLgth -> decryptMsg;
  decryptMsg -> handleReceivedMsg;
  handleReceivedMsg -> prepareAnswerMsg;
  prepareAnswerMsg -> createMsgFromHeaderPart;
  createMsgFromHeaderPart -> getMsgPartsFromHeaderPart;
  getMsgPartsFromHeaderPart -> createMsg;
  createMsg -> addField;
  addField -> createMsg;
  createMsg -> prepareValuesCb;
  prepareValuesCb -> getActionMode;
  getActionMode-> runAction;
  runAction -> buildMsg;
  createMsg -> buildMsg;
  buildMsg -> fixOffsetsForKeyValues;
  fixOffsetsForKeyValues -> initMsg;
  initMsg -> setMsgValues;
  setMsgValues -> getMsgData;
  getMsgData -> encryptMsg;
  encryptMsg -> sendMsg:f2;
  getMsgData -> sendMsg:f2;
  node [shape=record];
    sendMsg [shape=record, label="<f0> A|<f1> G|<f2> S|<f3> R|<f4> U|<f5> W|<f6> N"];
  sendMsg:f2 -> typeRSendAnswer;
  typeRSendAnswer -> Queue:f0;
  typeRSendAnswer -> deleteMsg;
}
