function checkOK(result, fieldName)
  if (result ~= "OK") then
    print(tostring(result).." for field: "..fieldName)
  end
end

def="pwd1"
structmsg.createmsgdef(def, 15)
result=structmsg.addfielddef(def, "@src", "uint16_t", 2)
checkOK(result,"@src")
result=structmsg.addfielddef(def, "@dst", "uint16_t", 2)
checkOK(result,"@dst")
result=structmsg.addfielddef(def, "@totalLgth", "uint16_t", 2)
checkOK(result,"@totalLgth")
result=structmsg.addfielddef(def, "@cmdKey", "uint16_t", 2)
checkOK(result,"@cmdKey")
result=structmsg.addfielddef(def, "@cmdLgth", "uint16_t", 2)
checkOK(result,"@cmdLgth")
result=structmsg.addfielddef(def, "@randomNum", "uint32_t", 4)
checkOK(result,"@randomNum")
result=structmsg.addfielddef(def, "@sequenceNum", "uint32_t", 4)
checkOK(result,"@sequenceNum")
result=structmsg.addfielddef(def, "pwd1", "uint8_t*", 16)
checkOK(result,"pwd")
result=structmsg.addfielddef(def, "@tablerows", "uint8_t", 2)
checkOK(result,"@tablerows")
result=structmsg.addfielddef(def, "@tablerowfields", "uint8_t", 3)
checkOK(result,"@tablerowfields")
result=structmsg.addfielddef(def, "ssid1", "uint8_t*", 16)
checkOK(result,"ssid")
result=structmsg.addfielddef(def, "rssid1", "uint8_t*", 6)
checkOK(result,"rssid")
result=structmsg.addfielddef(def, "channel1", "uint8_t*", 6)
checkOK(result,"channel")
result=structmsg.addfielddef(def, "@filler", "uint8_t*", 1)
checkOK(result,"@filler")
result=structmsg.addfielddef(def, "@crc", "uint16_t", 2)
checkOK(result,"@crc")
result=structmsg.dumpfielddef(def)
print(tostring(result))

